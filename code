#include <Adafruit_Sensor.h>

//Program to

#include <SoftwareSerial.h>

#include <LiquidCrystal.h>

#include <dht11.h>   // include dht sensor library
int constrast = 75;

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);


dht11 DHT11;

float t=0;

float h=0;

#define DHT11_PIN 8

#define LDR_PIN A1

#define MQ3_PIN A0

char data = 0;

int ldr_read = 0;

int gas_read = 0;

// replace with your channel's thingspeak API key

String apiKey ;

// connect 10 to TX of Serial USB

// connect 11 to RX of serial USB

SoftwareSerial ser(12,13); // RX, TX

void setup() 

{                

  // enable software serial

  ser.begin(9600);

  analogWrite(6,constrast);
  lcd.begin(16,2);


 

 // pinMode(LDR_PIN, INPUT);

  //pinMode(MQ3_PIN, INPUT);


  lcd.setCursor(1,0);

  lcd.print("**SmarT FooD**");

  lcd.setCursor(3,1);

  lcd.print("Monitoring");
  
  delay(1000);

  lcd.clear();

  

  Serial.begin(9600);


 

  // reset ESP8266 WiFi connection AT+CIPMUX=1 AT+CWJAP

  ser.println("AT");

  delay(1000);

  String cmd="AT+CWJAP=\"Naren\",\"123456789\"";  //SSID and Password   "a\"d\"f" = a"d"f

  ser.println(cmd);

  delay(1000);

  ser.println("AT+CIPMUX=0");

  delay(1000);

 }

// the loop 

void loop()

{
  lcd.clear();

  ldr_read = analogRead(LDR_PIN);

  lcd.setCursor(0,0);

  lcd.print("LDR-");

  lcd.setCursor(4,0);

  lcd.print(ldr_read);

  delay(100);


 

  lcd.setCursor(0,1);

  lcd.print("MQ3-");

  gas_read = analogRead(MQ3_PIN);

  lcd.setCursor(4,1);

  lcd.print(gas_read);

  delay(100);


 

  int chk = DHT11.read(DHT11_PIN);

  //Serial.print("Temperature = ");

  float t = DHT11.temperature;


 

  //lcd.clear();

  lcd.setCursor(8,0);

  lcd.print("Tem-");


 

  lcd.setCursor(12,0);

  lcd.print(DHT11.temperature);

  delay(100);

  //Serial.println(t);


 

  //Serial.print("Humidity = ");

  float h = DHT11.humidity;

  lcd.setCursor(8,1);

  lcd.print("Hum-");

  lcd.setCursor(12,1);

  lcd.print(DHT11.humidity);

  delay(100);

  lcd.clear();

  //Serial.println(h);


 

  esp_8266();

}

void esp_8266()

{

   // TCP connection AT+CIPSTART=4,"TCP","184.106.153.149",80 

    String cmd = "AT+CIPSTART=\"TCP\",";

    cmd += "\"api.thingspeak.com\""; // api.thingspeak.com

    cmd += ",80";

    ser.println(cmd);

    //Serial.println(cmd); 

    if(ser.find("Error"))

    {

      //Serial.println("AT+CIPSTART error");

      return;

    }

  apiKey = "XG1O4A1WXM2VRFEX";
  // prepare GET string GET https://api.thingspeak.com/update?api_key=LHAG4NSIYJ5UWS6U&field1=0rnrn

  String getStr = "GET /update?api_key=";

  getStr += apiKey;

  getStr +="&field1=";

  getStr +=String(t);

  getStr +="&field2=";

  getStr +=String(h);

  getStr +="&field3=";

  getStr +=String(ldr_read);

  getStr +="&field4=";

  getStr +=String(gas_read);

  getStr += "rnrn";

  // send data length

  cmd = "AT+CIPSEND=4";

  ser.println(cmd);

  //Serial.println(cmd);

  delay(1000);

  ser.print(getStr);

  //Serial.println(getStr);

  // thingspeak needs 15 sec delay between updates

  delay(3000);  

  ser.println("AT+CIPCLOSE");

  delay(1000);  

}
